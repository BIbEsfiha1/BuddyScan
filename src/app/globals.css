@tailwind base;
@tailwind components;
@tailwind utilities;

/* Ensure consistent font */
body {
  font-family: var(--font-geist-sans), Arial, Helvetica, sans-serif; /* Use Geist Sans variable */
}

@layer base {
  /* Light theme variables */
  :root {
    --background: 0 0% 100%; /* White */
    --foreground: 240 10% 3.9%; /* Dark Gray */
    --card: 0 0% 100%; /* White */
    --card-foreground: 240 10% 3.9%; /* Dark Gray */
    --popover: 0 0% 100%; /* White */
    --popover-foreground: 240 10% 3.9%; /* Dark Gray */
    --primary: 120 45% 45%; /* Slightly richer green */
    --primary-foreground: 0 0% 100%; /* White */
    --secondary: 35 30% 55%; /* Slightly warmer brown */
    --secondary-foreground: 0 0% 100%; /* White */
    --muted: 240 4.8% 95.9%; /* Light Gray */
    --muted-foreground: 240 3.8% 46.1%; /* Mid Gray */
    --accent: 90 60% 65%; /* Softer lime green */
    --accent-foreground: 90 100% 15%; /* Darker green for contrast */
    --destructive: 0 74.2% 50.2%; /* Adjusted destructive for better visibility */
    --destructive-foreground: 0 0% 98%; /* Off-white */
    --border: 240 5.9% 90%; /* Light Gray Border */
    --input: 240 5.9% 90%; /* Light Gray Input */
    --ring: 120 45% 45%; /* Primary Green for rings */
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.75rem; /* Increased radius for softer corners */
  }

  /* Dark theme variables applied by .dark class */
   .dark {
    --background: 240 5% 12%; /* Darker background */
    --foreground: 0 0% 95%; /* Slightly off-white foreground */
    --card: 240 4% 16%; /* Slightly lighter card background */
    --card-foreground: 0 0% 95%;
    --popover: 240 4% 14%; /* Slightly darker popover */
    --popover-foreground: 0 0% 95%;
    --primary: 120 50% 55%; /* Brighter green for dark mode */
    --primary-foreground: 0 0% 100%; /* White */
    --secondary: 35 35% 60%; /* Lighter brown for dark mode */
    --secondary-foreground: 0 0% 100%; /* White */
    --muted: 240 3.7% 22%; /* Adjusted muted */
    --muted-foreground: 240 5% 64.9%;
    --accent: 90 65% 70%; /* Brighter lime accent */
    --accent-foreground: 90 100% 10%; /* Dark Green/Black for contrast on lime */
    --destructive: 0 62.8% 55.6%; /* Adjusted destructive, slightly brighter */
    --destructive-foreground: 0 0% 98%;
    --border: 240 3.7% 28%; /* Slightly lighter border */
    --input: 240 3.7% 25%;
    --ring: 120 50% 55%; /* Primary Green for rings */
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
    /* Radius is already defined in :root */
  }
}

@layer base {
  * {
    @apply border-border; /* Apply border color globally */
  }
  body {
     @apply bg-background text-foreground antialiased; /* Ensure background and text colors */
     /* Optional: Add subtle background pattern */
     /* background-image: radial-gradient(hsl(var(--muted)) 1px, transparent 1px);
     background-size: 16px 16px; */
  }
  /* Add focus ring styling */
   *:focus-visible {
      @apply outline-none ring-2 ring-offset-2 ring-ring ring-offset-background;
   }
}

@layer components {
 /* Add base styling for common elements passed via className */
  .button {
     @apply transition-all duration-200 ease-in-out transform hover:scale-[1.02] active:scale-[0.98] shadow-md hover:shadow-lg;
  }
  .card {
     @apply rounded-lg border bg-card text-card-foreground shadow-sm overflow-hidden transition-shadow duration-300 ease-in-out;
  }
   .card:hover {
      @apply shadow-xl; /* Keep existing hover effect */
   }
   .input {
       @apply flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground transition-all duration-200 ease-in-out focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:shadow-inner disabled:cursor-not-allowed disabled:opacity-50 md:text-sm;
    }
    .textarea {
       @apply flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground transition-all duration-200 ease-in-out focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:shadow-inner disabled:cursor-not-allowed disabled:opacity-50 md:text-sm;
    }
    .dialog-content {
        @apply fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg;
    }
}

/* Keyframes for animations */
/* Simplified vertical scan line animation */
@keyframes scan-line-vertical {
  0% {
    transform: translateY(0%);
    opacity: 0.8;
  }
  50% {
    transform: translateY(calc(100% - 2px)); /* Move to bottom */
    opacity: 0.8;
  }
  100% {
    transform: translateY(0%); /* Move back to top */
    opacity: 0.8;
  }
}


.animate-scan-line-vertical {
  animation: scan-line-vertical 3.5s cubic-bezier(0.4, 0, 0.6, 1) infinite; /* Smoother timing, longer duration */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 2px;
  z-index: 10;
  /* Gradient background defined in JSX/TSX or style prop for dynamic colors */
  /* Example static gradient (replace hsl var if using inline styles): */
   /* background: linear-gradient(90deg, transparent, hsl(var(--accent)), transparent); */
}

/* Keyframe for pulsing border */
@keyframes pulse-border {
  0%, 100% { border-color: hsla(var(--primary) / 0.5); box-shadow: 0 0 10px 2px hsla(var(--primary) / 0.2); }
  50% { border-color: hsla(var(--primary) / 0.8); box-shadow: 0 0 18px 4px hsla(var(--primary) / 0.3); }
}

.animate-pulse-border {
  animation: pulse-border 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* Keyframe for pulsing corners (can use Tailwind's animate-pulse directly if sufficient) */
/* If more control is needed:
@keyframes pulse-corners {
  0%, 100% { border-color: hsl(var(--accent)); opacity: 0.7; }
  50% { border-color: hsl(var(--accent)); opacity: 1; }
}
.animate-pulse-corners {
  animation: pulse-corners 1.8s cubic-bezier(0.4, 0, 0.6, 1) infinite;
} */
